version: '3'
services:
  redis-node-1:
    image: redis/redis-stack-server:latest
    container_name: node-1
    #command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    command:
      - sh
      - -c
      - redis-server /usr/local/etc/redis/redis.conf & echo "yes" | redis-cli --tls -h 192.168.1.90 -p 7000 -a passServer --cert /usr/local/etc/redis/ssl/redis-server.crt --key /usr/local/etc/redis/ssl/redis-server.key --cacert /usr/local/etc/redis/ssl/redis-server-ca.crt --cluster create 192.168.1.90:7000 192.168.1.90:7001 192.168.1.90:7002 192.168.1.90:7003 192.168.1.90:7004 192.168.1.90:7005 --cluster-replicas 1  & tail -f
    volumes:
      - ./7000/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7000/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7000:7000"
      - "17000:17000"
    depends_on:
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster
  redis-node-2:
    image: redis/redis-stack-server:latest
    container_name: node-2
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./7001/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7001/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7001:7001"
      - "17001:17001"
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster
  redis-node-3:
    image: redis/redis-stack-server:latest
    container_name: node-3
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./7002/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7002/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7002:7002"
      - "17002:17002"
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster

  redis-node-4:
    image: redis/redis-stack-server:latest
    container_name: node-4
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./7003/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7003/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7003:7003"
      - "17003:17003"
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster
  redis-node-5:
    image: redis/redis-stack-server:latest
    container_name: node-5
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./7004/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7004/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7004:7004"
      - "17004:17004"
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster

  redis-node-6:
    image: redis/redis-stack-server:latest
    container_name: node-6
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./7005/redis.conf:/usr/local/etc/redis/redis.conf
      - ./7005/data:/data
      - ./ssl:/usr/local/etc/redis/ssl
    ports:
      - "7005:7005"
      - "17005:17005"
    deploy:
      resources:
        limits:
          memory: 1G # Limit memory for container 512 MB
          cpus: "2.0" # Limit CPU for container is 0.5 (~50% of single core)
    restart: always
    networks:
      - redis-cluster
networks:
  redis-cluster:
    driver: bridge
